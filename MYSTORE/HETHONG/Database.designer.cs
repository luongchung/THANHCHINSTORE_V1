#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeThong
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbThanhChin")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGroupID(GroupID instance);
    partial void UpdateGroupID(GroupID instance);
    partial void DeleteGroupID(GroupID instance);
    partial void InsertpqAccessRight(pqAccessRight instance);
    partial void UpdatepqAccessRight(pqAccessRight instance);
    partial void DeletepqAccessRight(pqAccessRight instance);
    partial void InsertpqForm(pqForm instance);
    partial void UpdatepqForm(pqForm instance);
    partial void DeletepqForm(pqForm instance);
    partial void InsertpqModule(pqModule instance);
    partial void UpdatepqModule(pqModule instance);
    partial void DeletepqModule(pqModule instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertpqModule_FormControl(pqModule_FormControl instance);
    partial void UpdatepqModule_FormControl(pqModule_FormControl instance);
    partial void DeletepqModule_FormControl(pqModule_FormControl instance);
    partial void InsertpqNhomNhanVien(pqNhomNhanVien instance);
    partial void UpdatepqNhomNhanVien(pqNhomNhanVien instance);
    partial void DeletepqNhomNhanVien(pqNhomNhanVien instance);
    partial void InsertLoaiHang(LoaiHang instance);
    partial void UpdateLoaiHang(LoaiHang instance);
    partial void DeleteLoaiHang(LoaiHang instance);
    partial void InsertBan(Ban instance);
    partial void UpdateBan(Ban instance);
    partial void DeleteBan(Ban instance);
    partial void InsertBangNo(BangNo instance);
    partial void UpdateBangNo(BangNo instance);
    partial void DeleteBangNo(BangNo instance);
    partial void InsertChuNo(ChuNo instance);
    partial void UpdateChuNo(ChuNo instance);
    partial void DeleteChuNo(ChuNo instance);
    partial void InsertXa(Xa instance);
    partial void UpdateXa(Xa instance);
    partial void DeleteXa(Xa instance);
    partial void InsertHang(Hang instance);
    partial void UpdateHang(Hang instance);
    partial void DeleteHang(Hang instance);
    #endregion
		public DatabaseDataContext() : 
				base(Common.getChuoiKetNoi(), mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GroupID> GroupIDs
		{
			get
			{
				return this.GetTable<GroupID>();
			}
		}
		
		public System.Data.Linq.Table<pqAccessRight> pqAccessRights
		{
			get
			{
				return this.GetTable<pqAccessRight>();
			}
		}
		
		public System.Data.Linq.Table<pqForm> pqForms
		{
			get
			{
				return this.GetTable<pqForm>();
			}
		}
		
		public System.Data.Linq.Table<pqModule> pqModules
		{
			get
			{
				return this.GetTable<pqModule>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<pqModule_FormControl> pqModule_FormControls
		{
			get
			{
				return this.GetTable<pqModule_FormControl>();
			}
		}
		
		public System.Data.Linq.Table<pqNhomNhanVien> pqNhomNhanViens
		{
			get
			{
				return this.GetTable<pqNhomNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHang> LoaiHangs
		{
			get
			{
				return this.GetTable<LoaiHang>();
			}
		}
		
		public System.Data.Linq.Table<Ban> Bans
		{
			get
			{
				return this.GetTable<Ban>();
			}
		}
		
		public System.Data.Linq.Table<BangNo> BangNos
		{
			get
			{
				return this.GetTable<BangNo>();
			}
		}
		
		public System.Data.Linq.Table<ChuNo> ChuNos
		{
			get
			{
				return this.GetTable<ChuNo>();
			}
		}
		
		public System.Data.Linq.Table<Xa> Xas
		{
			get
			{
				return this.GetTable<Xa>();
			}
		}
		
		public System.Data.Linq.Table<Hang> Hangs
		{
			get
			{
				return this.GetTable<Hang>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccessRightInsert")]
		public int AccessRightInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdatePqAccess")]
		public int spUpdatePqAccess([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAccessRight", DbType="Bit")] System.Nullable<bool> isAccessRight)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID, moduleID, isAccessRight);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pqResetNode")]
		public int pqResetNode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAccessRight", DbType="Bit")] System.Nullable<bool> isAccessRight)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID, isAccessRight);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupID")]
	public partial class GroupID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GroupName;
		
		private string _DienGiai;
		
		private EntitySet<pqAccessRight> _pqAccessRights;
		
		private EntitySet<pqNhomNhanVien> _pqNhomNhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public GroupID()
		{
			this._pqAccessRights = new EntitySet<pqAccessRight>(new Action<pqAccessRight>(this.attach_pqAccessRights), new Action<pqAccessRight>(this.detach_pqAccessRights));
			this._pqNhomNhanViens = new EntitySet<pqNhomNhanVien>(new Action<pqNhomNhanVien>(this.attach_pqNhomNhanViens), new Action<pqNhomNhanVien>(this.detach_pqNhomNhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienGiai", DbType="NVarChar(200)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupID_pqAccessRight", Storage="_pqAccessRights", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<pqAccessRight> pqAccessRights
		{
			get
			{
				return this._pqAccessRights;
			}
			set
			{
				this._pqAccessRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupID_pqNhomNhanVien", Storage="_pqNhomNhanViens", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<pqNhomNhanVien> pqNhomNhanViens
		{
			get
			{
				return this._pqNhomNhanViens;
			}
			set
			{
				this._pqNhomNhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pqAccessRights(pqAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.GroupID1 = this;
		}
		
		private void detach_pqAccessRights(pqAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.GroupID1 = null;
		}
		
		private void attach_pqNhomNhanViens(pqNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.GroupID1 = this;
		}
		
		private void detach_pqNhomNhanViens(pqNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.GroupID1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqAccessRight")]
	public partial class pqAccessRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<bool> _IsAccessRight;
		
		private EntityRef<GroupID> _GroupID1;
		
		private EntityRef<pqModule> _pqModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModuleIDChanging(System.Nullable<int> value);
    partial void OnModuleIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnIsAccessRightChanging(System.Nullable<bool> value);
    partial void OnIsAccessRightChanged();
    #endregion
		
		public pqAccessRight()
		{
			this._GroupID1 = default(EntityRef<GroupID>);
			this._pqModule = default(EntityRef<pqModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int")]
		public System.Nullable<int> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._pqModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._GroupID1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccessRight", DbType="Bit")]
		public System.Nullable<bool> IsAccessRight
		{
			get
			{
				return this._IsAccessRight;
			}
			set
			{
				if ((this._IsAccessRight != value))
				{
					this.OnIsAccessRightChanging(value);
					this.SendPropertyChanging();
					this._IsAccessRight = value;
					this.SendPropertyChanged("IsAccessRight");
					this.OnIsAccessRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupID_pqAccessRight", Storage="_GroupID1", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public GroupID GroupID1
		{
			get
			{
				return this._GroupID1.Entity;
			}
			set
			{
				GroupID previousValue = this._GroupID1.Entity;
				if (((previousValue != value) 
							|| (this._GroupID1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupID1.Entity = null;
						previousValue.pqAccessRights.Remove(this);
					}
					this._GroupID1.Entity = value;
					if ((value != null))
					{
						value.pqAccessRights.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GroupID1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqModule_pqAccessRight", Storage="_pqModule", ThisKey="ModuleID", OtherKey="ID", IsForeignKey=true)]
		public pqModule pqModule
		{
			get
			{
				return this._pqModule.Entity;
			}
			set
			{
				pqModule previousValue = this._pqModule.Entity;
				if (((previousValue != value) 
							|| (this._pqModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pqModule.Entity = null;
						previousValue.pqAccessRights.Remove(this);
					}
					this._pqModule.Entity = value;
					if ((value != null))
					{
						value.pqAccessRights.Add(this);
						this._ModuleID = value.ID;
					}
					else
					{
						this._ModuleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("pqModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqForm")]
	public partial class pqForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FormName;
		
		private string _DienGiai;
		
		private EntitySet<pqModule_FormControl> _pqModule_FormControls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public pqForm()
		{
			this._pqModule_FormControls = new EntitySet<pqModule_FormControl>(new Action<pqModule_FormControl>(this.attach_pqModule_FormControls), new Action<pqModule_FormControl>(this.detach_pqModule_FormControls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="NVarChar(100)")]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienGiai", DbType="NVarChar(200)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqForm_pqModule_FormControl", Storage="_pqModule_FormControls", ThisKey="ID", OtherKey="FormID")]
		public EntitySet<pqModule_FormControl> pqModule_FormControls
		{
			get
			{
				return this._pqModule_FormControls;
			}
			set
			{
				this._pqModule_FormControls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pqModule_FormControls(pqModule_FormControl entity)
		{
			this.SendPropertyChanging();
			entity.pqForm = this;
		}
		
		private void detach_pqModule_FormControls(pqModule_FormControl entity)
		{
			this.SendPropertyChanging();
			entity.pqForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqModule")]
	public partial class pqModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _DienGiai;
		
		private System.Nullable<int> _IDCha;
		
		private EntitySet<pqAccessRight> _pqAccessRights;
		
		private EntitySet<pqModule_FormControl> _pqModule_FormControls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    partial void OnIDChaChanging(System.Nullable<int> value);
    partial void OnIDChaChanged();
    #endregion
		
		public pqModule()
		{
			this._pqAccessRights = new EntitySet<pqAccessRight>(new Action<pqAccessRight>(this.attach_pqAccessRights), new Action<pqAccessRight>(this.detach_pqAccessRights));
			this._pqModule_FormControls = new EntitySet<pqModule_FormControl>(new Action<pqModule_FormControl>(this.attach_pqModule_FormControls), new Action<pqModule_FormControl>(this.detach_pqModule_FormControls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienGiai", DbType="NVarChar(200)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCha", DbType="Int")]
		public System.Nullable<int> IDCha
		{
			get
			{
				return this._IDCha;
			}
			set
			{
				if ((this._IDCha != value))
				{
					this.OnIDChaChanging(value);
					this.SendPropertyChanging();
					this._IDCha = value;
					this.SendPropertyChanged("IDCha");
					this.OnIDChaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqModule_pqAccessRight", Storage="_pqAccessRights", ThisKey="ID", OtherKey="ModuleID")]
		public EntitySet<pqAccessRight> pqAccessRights
		{
			get
			{
				return this._pqAccessRights;
			}
			set
			{
				this._pqAccessRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqModule_pqModule_FormControl", Storage="_pqModule_FormControls", ThisKey="ID", OtherKey="ModuleID")]
		public EntitySet<pqModule_FormControl> pqModule_FormControls
		{
			get
			{
				return this._pqModule_FormControls;
			}
			set
			{
				this._pqModule_FormControls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pqAccessRights(pqAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.pqModule = this;
		}
		
		private void detach_pqAccessRights(pqAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.pqModule = null;
		}
		
		private void attach_pqModule_FormControls(pqModule_FormControl entity)
		{
			this.SendPropertyChanging();
			entity.pqModule = this;
		}
		
		private void detach_pqModule_FormControls(pqModule_FormControl entity)
		{
			this.SendPropertyChanging();
			entity.pqModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaNV;
		
		private string _TenNV;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<int> _Tuoi;
		
		private string _SDT;
		
		private System.Nullable<int> _IDLoaiNV;
		
		private string _DiaChi;
		
		private string _Password;
		
		private System.Nullable<bool> _IsLock;
		
		private EntitySet<pqNhomNhanVien> _pqNhomNhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnTuoiChanging(System.Nullable<int> value);
    partial void OnTuoiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnIDLoaiNVChanging(System.Nullable<int> value);
    partial void OnIDLoaiNVChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsLockChanging(System.Nullable<bool> value);
    partial void OnIsLockChanged();
    #endregion
		
		public NhanVien()
		{
			this._pqNhomNhanViens = new EntitySet<pqNhomNhanVien>(new Action<pqNhomNhanVien>(this.attach_pqNhomNhanViens), new Action<pqNhomNhanVien>(this.detach_pqNhomNhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(100)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(100)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuoi", DbType="Int")]
		public System.Nullable<int> Tuoi
		{
			get
			{
				return this._Tuoi;
			}
			set
			{
				if ((this._Tuoi != value))
				{
					this.OnTuoiChanging(value);
					this.SendPropertyChanging();
					this._Tuoi = value;
					this.SendPropertyChanged("Tuoi");
					this.OnTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(30)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiNV", DbType="Int")]
		public System.Nullable<int> IDLoaiNV
		{
			get
			{
				return this._IDLoaiNV;
			}
			set
			{
				if ((this._IDLoaiNV != value))
				{
					this.OnIDLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiNV = value;
					this.SendPropertyChanged("IDLoaiNV");
					this.OnIDLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(500)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLock", DbType="Bit")]
		public System.Nullable<bool> IsLock
		{
			get
			{
				return this._IsLock;
			}
			set
			{
				if ((this._IsLock != value))
				{
					this.OnIsLockChanging(value);
					this.SendPropertyChanging();
					this._IsLock = value;
					this.SendPropertyChanged("IsLock");
					this.OnIsLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_pqNhomNhanVien", Storage="_pqNhomNhanViens", ThisKey="ID", OtherKey="MaNV")]
		public EntitySet<pqNhomNhanVien> pqNhomNhanViens
		{
			get
			{
				return this._pqNhomNhanViens;
			}
			set
			{
				this._pqNhomNhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pqNhomNhanViens(pqNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_pqNhomNhanViens(pqNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqModule_FormControl")]
	public partial class pqModule_FormControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _FormID;
		
		private string _ControlName;
		
		private EntityRef<pqForm> _pqForm;
		
		private EntityRef<pqModule> _pqModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModuleIDChanging(System.Nullable<int> value);
    partial void OnModuleIDChanged();
    partial void OnFormIDChanging(System.Nullable<int> value);
    partial void OnFormIDChanged();
    partial void OnControlNameChanging(string value);
    partial void OnControlNameChanged();
    #endregion
		
		public pqModule_FormControl()
		{
			this._pqForm = default(EntityRef<pqForm>);
			this._pqModule = default(EntityRef<pqModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int")]
		public System.Nullable<int> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._pqModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int")]
		public System.Nullable<int> FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					if (this._pqForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlName", DbType="NVarChar(100)")]
		public string ControlName
		{
			get
			{
				return this._ControlName;
			}
			set
			{
				if ((this._ControlName != value))
				{
					this.OnControlNameChanging(value);
					this.SendPropertyChanging();
					this._ControlName = value;
					this.SendPropertyChanged("ControlName");
					this.OnControlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqForm_pqModule_FormControl", Storage="_pqForm", ThisKey="FormID", OtherKey="ID", IsForeignKey=true)]
		public pqForm pqForm
		{
			get
			{
				return this._pqForm.Entity;
			}
			set
			{
				pqForm previousValue = this._pqForm.Entity;
				if (((previousValue != value) 
							|| (this._pqForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pqForm.Entity = null;
						previousValue.pqModule_FormControls.Remove(this);
					}
					this._pqForm.Entity = value;
					if ((value != null))
					{
						value.pqModule_FormControls.Add(this);
						this._FormID = value.ID;
					}
					else
					{
						this._FormID = default(Nullable<int>);
					}
					this.SendPropertyChanged("pqForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqModule_pqModule_FormControl", Storage="_pqModule", ThisKey="ModuleID", OtherKey="ID", IsForeignKey=true)]
		public pqModule pqModule
		{
			get
			{
				return this._pqModule.Entity;
			}
			set
			{
				pqModule previousValue = this._pqModule.Entity;
				if (((previousValue != value) 
							|| (this._pqModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pqModule.Entity = null;
						previousValue.pqModule_FormControls.Remove(this);
					}
					this._pqModule.Entity = value;
					if ((value != null))
					{
						value.pqModule_FormControls.Add(this);
						this._ModuleID = value.ID;
					}
					else
					{
						this._ModuleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("pqModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqNhomNhanVien")]
	public partial class pqNhomNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _MaNV;
		
		private EntityRef<GroupID> _GroupID1;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    #endregion
		
		public pqNhomNhanVien()
		{
			this._GroupID1 = default(EntityRef<GroupID>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._GroupID1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupID_pqNhomNhanVien", Storage="_GroupID1", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public GroupID GroupID1
		{
			get
			{
				return this._GroupID1.Entity;
			}
			set
			{
				GroupID previousValue = this._GroupID1.Entity;
				if (((previousValue != value) 
							|| (this._GroupID1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupID1.Entity = null;
						previousValue.pqNhomNhanViens.Remove(this);
					}
					this._GroupID1.Entity = value;
					if ((value != null))
					{
						value.pqNhomNhanViens.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GroupID1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_pqNhomNhanVien", Storage="_NhanVien", ThisKey="MaNV", OtherKey="ID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.pqNhomNhanViens.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.pqNhomNhanViens.Add(this);
						this._MaNV = value.ID;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHang")]
	public partial class LoaiHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenLoai;
		
		private EntitySet<Hang> _Hangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiHang()
		{
			this._Hangs = new EntitySet<Hang>(new Action<Hang>(this.attach_Hangs), new Action<Hang>(this.detach_Hangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(100)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_Hang", Storage="_Hangs", ThisKey="ID", OtherKey="IDLoaiHang")]
		public EntitySet<Hang> Hangs
		{
			get
			{
				return this._Hangs;
			}
			set
			{
				this._Hangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hangs(Hang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = this;
		}
		
		private void detach_Hangs(Hang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ban")]
	public partial class Ban : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenBan;
		
		private System.Nullable<int> _IDXa;
		
		private EntitySet<ChuNo> _ChuNos;
		
		private EntityRef<Xa> _Xa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenBanChanging(string value);
    partial void OnTenBanChanged();
    partial void OnIDXaChanging(System.Nullable<int> value);
    partial void OnIDXaChanged();
    #endregion
		
		public Ban()
		{
			this._ChuNos = new EntitySet<ChuNo>(new Action<ChuNo>(this.attach_ChuNos), new Action<ChuNo>(this.detach_ChuNos));
			this._Xa = default(EntityRef<Xa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBan", DbType="NVarChar(50)")]
		public string TenBan
		{
			get
			{
				return this._TenBan;
			}
			set
			{
				if ((this._TenBan != value))
				{
					this.OnTenBanChanging(value);
					this.SendPropertyChanging();
					this._TenBan = value;
					this.SendPropertyChanged("TenBan");
					this.OnTenBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDXa", DbType="Int")]
		public System.Nullable<int> IDXa
		{
			get
			{
				return this._IDXa;
			}
			set
			{
				if ((this._IDXa != value))
				{
					if (this._Xa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDXaChanging(value);
					this.SendPropertyChanging();
					this._IDXa = value;
					this.SendPropertyChanged("IDXa");
					this.OnIDXaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ban_ChuNo", Storage="_ChuNos", ThisKey="ID", OtherKey="IDBan")]
		public EntitySet<ChuNo> ChuNos
		{
			get
			{
				return this._ChuNos;
			}
			set
			{
				this._ChuNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xa_Ban", Storage="_Xa", ThisKey="IDXa", OtherKey="ID", IsForeignKey=true)]
		public Xa Xa
		{
			get
			{
				return this._Xa.Entity;
			}
			set
			{
				Xa previousValue = this._Xa.Entity;
				if (((previousValue != value) 
							|| (this._Xa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xa.Entity = null;
						previousValue.Bans.Remove(this);
					}
					this._Xa.Entity = value;
					if ((value != null))
					{
						value.Bans.Add(this);
						this._IDXa = value.ID;
					}
					else
					{
						this._IDXa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Xa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuNos(ChuNo entity)
		{
			this.SendPropertyChanging();
			entity.Ban = this;
		}
		
		private void detach_ChuNos(ChuNo entity)
		{
			this.SendPropertyChanging();
			entity.Ban = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangNo")]
	public partial class BangNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private System.Nullable<decimal> _Tien;
		
		private string _GhiChu;
		
		private System.Nullable<int> _IDChuNo;
		
		private System.Nullable<bool> _Tra;
		
		private EntityRef<ChuNo> _ChuNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnTienChanging(System.Nullable<decimal> value);
    partial void OnTienChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIDChuNoChanging(System.Nullable<int> value);
    partial void OnIDChuNoChanged();
    partial void OnTraChanging(System.Nullable<bool> value);
    partial void OnTraChanged();
    #endregion
		
		public BangNo()
		{
			this._ChuNo = default(EntityRef<ChuNo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tien", DbType="Money")]
		public System.Nullable<decimal> Tien
		{
			get
			{
				return this._Tien;
			}
			set
			{
				if ((this._Tien != value))
				{
					this.OnTienChanging(value);
					this.SendPropertyChanging();
					this._Tien = value;
					this.SendPropertyChanged("Tien");
					this.OnTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(500)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChuNo", DbType="Int")]
		public System.Nullable<int> IDChuNo
		{
			get
			{
				return this._IDChuNo;
			}
			set
			{
				if ((this._IDChuNo != value))
				{
					if (this._ChuNo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChuNoChanging(value);
					this.SendPropertyChanging();
					this._IDChuNo = value;
					this.SendPropertyChanged("IDChuNo");
					this.OnIDChuNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tra", DbType="Bit")]
		public System.Nullable<bool> Tra
		{
			get
			{
				return this._Tra;
			}
			set
			{
				if ((this._Tra != value))
				{
					this.OnTraChanging(value);
					this.SendPropertyChanging();
					this._Tra = value;
					this.SendPropertyChanged("Tra");
					this.OnTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuNo_BangNo", Storage="_ChuNo", ThisKey="IDChuNo", OtherKey="ID", IsForeignKey=true)]
		public ChuNo ChuNo
		{
			get
			{
				return this._ChuNo.Entity;
			}
			set
			{
				ChuNo previousValue = this._ChuNo.Entity;
				if (((previousValue != value) 
							|| (this._ChuNo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuNo.Entity = null;
						previousValue.BangNos.Remove(this);
					}
					this._ChuNo.Entity = value;
					if ((value != null))
					{
						value.BangNos.Add(this);
						this._IDChuNo = value.ID;
					}
					else
					{
						this._IDChuNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuNo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuNo")]
	public partial class ChuNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenChuNo;
		
		private System.Nullable<bool> _GioiTinh;
		
		private string _GhiChu;
		
		private System.Nullable<int> _IDBan;
		
		private EntitySet<BangNo> _BangNos;
		
		private EntityRef<Ban> _Ban;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenChuNoChanging(string value);
    partial void OnTenChuNoChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIDBanChanging(System.Nullable<int> value);
    partial void OnIDBanChanged();
    #endregion
		
		public ChuNo()
		{
			this._BangNos = new EntitySet<BangNo>(new Action<BangNo>(this.attach_BangNos), new Action<BangNo>(this.detach_BangNos));
			this._Ban = default(EntityRef<Ban>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuNo", DbType="NVarChar(100)")]
		public string TenChuNo
		{
			get
			{
				return this._TenChuNo;
			}
			set
			{
				if ((this._TenChuNo != value))
				{
					this.OnTenChuNoChanging(value);
					this.SendPropertyChanging();
					this._TenChuNo = value;
					this.SendPropertyChanged("TenChuNo");
					this.OnTenChuNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(500)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBan", DbType="Int")]
		public System.Nullable<int> IDBan
		{
			get
			{
				return this._IDBan;
			}
			set
			{
				if ((this._IDBan != value))
				{
					if (this._Ban.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBanChanging(value);
					this.SendPropertyChanging();
					this._IDBan = value;
					this.SendPropertyChanged("IDBan");
					this.OnIDBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuNo_BangNo", Storage="_BangNos", ThisKey="ID", OtherKey="IDChuNo")]
		public EntitySet<BangNo> BangNos
		{
			get
			{
				return this._BangNos;
			}
			set
			{
				this._BangNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ban_ChuNo", Storage="_Ban", ThisKey="IDBan", OtherKey="ID", IsForeignKey=true)]
		public Ban Ban
		{
			get
			{
				return this._Ban.Entity;
			}
			set
			{
				Ban previousValue = this._Ban.Entity;
				if (((previousValue != value) 
							|| (this._Ban.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ban.Entity = null;
						previousValue.ChuNos.Remove(this);
					}
					this._Ban.Entity = value;
					if ((value != null))
					{
						value.ChuNos.Add(this);
						this._IDBan = value.ID;
					}
					else
					{
						this._IDBan = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ban");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangNos(BangNo entity)
		{
			this.SendPropertyChanging();
			entity.ChuNo = this;
		}
		
		private void detach_BangNos(BangNo entity)
		{
			this.SendPropertyChanging();
			entity.ChuNo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Xa")]
	public partial class Xa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenXa;
		
		private EntitySet<Ban> _Bans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenXaChanging(string value);
    partial void OnTenXaChanged();
    #endregion
		
		public Xa()
		{
			this._Bans = new EntitySet<Ban>(new Action<Ban>(this.attach_Bans), new Action<Ban>(this.detach_Bans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenXa", DbType="NVarChar(50)")]
		public string TenXa
		{
			get
			{
				return this._TenXa;
			}
			set
			{
				if ((this._TenXa != value))
				{
					this.OnTenXaChanging(value);
					this.SendPropertyChanging();
					this._TenXa = value;
					this.SendPropertyChanged("TenXa");
					this.OnTenXaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xa_Ban", Storage="_Bans", ThisKey="ID", OtherKey="IDXa")]
		public EntitySet<Ban> Bans
		{
			get
			{
				return this._Bans;
			}
			set
			{
				this._Bans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bans(Ban entity)
		{
			this.SendPropertyChanging();
			entity.Xa = this;
		}
		
		private void detach_Bans(Ban entity)
		{
			this.SendPropertyChanging();
			entity.Xa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hang")]
	public partial class Hang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenHang;
		
		private string _Cot1;
		
		private string _Cot2;
		
		private string _Cot3;
		
		private string _Cot4;
		
		private System.Nullable<int> _IDLoaiHang;
		
		private EntityRef<LoaiHang> _LoaiHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenHangChanging(string value);
    partial void OnTenHangChanged();
    partial void OnCot1Changing(string value);
    partial void OnCot1Changed();
    partial void OnCot2Changing(string value);
    partial void OnCot2Changed();
    partial void OnCot3Changing(string value);
    partial void OnCot3Changed();
    partial void OnCot4Changing(string value);
    partial void OnCot4Changed();
    partial void OnIDLoaiHangChanging(System.Nullable<int> value);
    partial void OnIDLoaiHangChanged();
    #endregion
		
		public Hang()
		{
			this._LoaiHang = default(EntityRef<LoaiHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHang", DbType="NVarChar(100)")]
		public string TenHang
		{
			get
			{
				return this._TenHang;
			}
			set
			{
				if ((this._TenHang != value))
				{
					this.OnTenHangChanging(value);
					this.SendPropertyChanging();
					this._TenHang = value;
					this.SendPropertyChanged("TenHang");
					this.OnTenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cot1", DbType="NVarChar(500)")]
		public string Cot1
		{
			get
			{
				return this._Cot1;
			}
			set
			{
				if ((this._Cot1 != value))
				{
					this.OnCot1Changing(value);
					this.SendPropertyChanging();
					this._Cot1 = value;
					this.SendPropertyChanged("Cot1");
					this.OnCot1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cot2", DbType="NVarChar(500)")]
		public string Cot2
		{
			get
			{
				return this._Cot2;
			}
			set
			{
				if ((this._Cot2 != value))
				{
					this.OnCot2Changing(value);
					this.SendPropertyChanging();
					this._Cot2 = value;
					this.SendPropertyChanged("Cot2");
					this.OnCot2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cot3", DbType="NVarChar(500)")]
		public string Cot3
		{
			get
			{
				return this._Cot3;
			}
			set
			{
				if ((this._Cot3 != value))
				{
					this.OnCot3Changing(value);
					this.SendPropertyChanging();
					this._Cot3 = value;
					this.SendPropertyChanged("Cot3");
					this.OnCot3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cot4", DbType="NVarChar(500)")]
		public string Cot4
		{
			get
			{
				return this._Cot4;
			}
			set
			{
				if ((this._Cot4 != value))
				{
					this.OnCot4Changing(value);
					this.SendPropertyChanging();
					this._Cot4 = value;
					this.SendPropertyChanged("Cot4");
					this.OnCot4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiHang", DbType="Int")]
		public System.Nullable<int> IDLoaiHang
		{
			get
			{
				return this._IDLoaiHang;
			}
			set
			{
				if ((this._IDLoaiHang != value))
				{
					if (this._LoaiHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiHang = value;
					this.SendPropertyChanged("IDLoaiHang");
					this.OnIDLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_Hang", Storage="_LoaiHang", ThisKey="IDLoaiHang", OtherKey="ID", IsForeignKey=true)]
		public LoaiHang LoaiHang
		{
			get
			{
				return this._LoaiHang.Entity;
			}
			set
			{
				LoaiHang previousValue = this._LoaiHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHang.Entity = null;
						previousValue.Hangs.Remove(this);
					}
					this._LoaiHang.Entity = value;
					if ((value != null))
					{
						value.Hangs.Add(this);
						this._IDLoaiHang = value.ID;
					}
					else
					{
						this._IDLoaiHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
